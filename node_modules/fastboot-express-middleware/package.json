{
  "_args": [
    [
      {
        "raw": "erkarl/fastboot-express-middleware",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "erkarl/fastboot-express-middleware",
        "spec": "github:erkarl/fastboot-express-middleware",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:erkarl/fastboot-express-middleware.git",
          "sshUrl": "git+ssh://git@github.com/erkarl/fastboot-express-middleware.git",
          "httpsUrl": "git+https://github.com/erkarl/fastboot-express-middleware.git",
          "gitUrl": "git://github.com/erkarl/fastboot-express-middleware.git",
          "shortcut": "github:erkarl/fastboot-express-middleware",
          "directUrl": "https://raw.githubusercontent.com/erkarl/fastboot-express-middleware/master/package.json"
        }
      },
      "/Users/ar/Projects/fastboot-app-server"
    ]
  ],
  "_from": "erkarl/fastboot-express-middleware",
  "_id": "fastboot-express-middleware@1.0.0-rc.4",
  "_inCache": true,
  "_location": "/fastboot-express-middleware",
  "_phantomChildren": {
    "escape-string-regexp": "1.0.5"
  },
  "_requested": {
    "raw": "erkarl/fastboot-express-middleware",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "erkarl/fastboot-express-middleware",
    "spec": "github:erkarl/fastboot-express-middleware",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:erkarl/fastboot-express-middleware.git",
      "sshUrl": "git+ssh://git@github.com/erkarl/fastboot-express-middleware.git",
      "httpsUrl": "git+https://github.com/erkarl/fastboot-express-middleware.git",
      "gitUrl": "git://github.com/erkarl/fastboot-express-middleware.git",
      "shortcut": "github:erkarl/fastboot-express-middleware",
      "directUrl": "https://raw.githubusercontent.com/erkarl/fastboot-express-middleware/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git://github.com/erkarl/fastboot-express-middleware.git#a0494b186c6e874c8e40d77ab181184bd5819bdd",
  "_shasum": "c4b03c75f7813074b1aab29ab1480da80e07b223",
  "_shrinkwrap": null,
  "_spec": "erkarl/fastboot-express-middleware",
  "_where": "/Users/ar/Projects/fastboot-app-server",
  "author": {
    "name": "Tom Dale",
    "email": "tom@tomdale.net"
  },
  "bugs": {
    "url": "https://github.com/ember-fastboot/fastboot-express-middleware/issues"
  },
  "dependencies": {
    "broccoli-module-alchemist-install": "^0.1.1",
    "chalk": "^1.1.3",
    "fastboot": "github:erkarl/fastboot"
  },
  "description": "An Express middleware for rendering Ember apps with FastBoot",
  "devDependencies": {
    "babel-core": "^6.11.4",
    "babel-preset-es2015": "^6.9.0",
    "broccoli-module-alchemist": "^0.2.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.3.0",
    "ember-cli": "^2.7.0",
    "express": "^4.13.4",
    "mocha": "^2.4.5",
    "mocha-jshint": "^2.3.1",
    "request-promise": "^3.0.0"
  },
  "gitHead": "a0494b186c6e874c8e40d77ab181184bd5819bdd",
  "homepage": "https://github.com/ember-fastboot/fastboot-express-middleware#readme",
  "keywords": [
    "fastboot",
    "ember",
    "express",
    "middleware"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "name": "fastboot-express-middleware",
  "optionalDependencies": {},
  "readme": "# FastBoot Express Middleware\n\n[![Build Status](https://travis-ci.org/ember-fastboot/fastboot-express-middleware.svg?branch=master)](https://travis-ci.org/ember-fastboot/fastboot-express-middleware)\n\nThis middleware is a small wrapper around the\n[fastboot](https://github.com/ember-fastboot/fastboot) package, which\nrenders Ember.js apps in Node.js.\n\nBy adding this middleware to your Express app, you can serve HTML from a\nrendered Ember.js app to clients that don't support JavaScript, such as\n`curl`, search crawlers, or users with JavaScript disabled.\n\nNote that this is _just an Express middleware_ and there is more needed\nto serve apps in a production environment. If you want to server-side\nrendered Ember applications without doing a lot of work, you are\nrecommended to consider the [FastBoot App\nServer](https://github.com/ember-fastboot/fastboot-app-server), which\nmanages many of the hard parts for you.\n\nThat said, this middleware is designed to be easy to integrate for those\nwho already have existing Express stacks, or who want maximum\nflexibility in how requests are handled.\n\n## Usage\n\n```js\nconst express = require('express');\nconst fastbootMiddleware = require('fastboot-express-middleware');\n\nlet app = express();\n\napp.get('/*', fastbootMiddleware('/path/to/dist'));\n\napp.listen(3000, function () {\n  console.log('FastBoot app listening on port 3000!');\n});\n```\n\n## Building Your Ember App\n\nBefore you can use your app with FastBoot, you must first install the\n[ember-cli-fastboot][ember-cli-fastboot] addon and build your app by\nrunning `ember build`. The build process will compile your app into a\nversion that is compatible with both Node.js and the browser and put it\nin the `dist` directory. This `dist` directory is the path you should\nprovide to the middleware to specify which Ember app to load and render.\n\n## Resilient Mode\n\nBy default, errors during render will cause the middleware to send an\nHTTP 500 status code as the response. In order to swallow errors and\nreturn a `200` status code  with an empty HTML page, set the `resilient` flag to\ntrue:\n\n```js\napp.get('/*', fastbootMiddleware('/path/to/dist', {\n  resilient: true\n}));\n```\n\nResilient mode still calls `next(err)` to propagate your error to any subsequent\nmiddleware that you apply after this one.\nYou can use this feature to track errors or log analytics.\n\nHowever, because FastBoot is reslient still sends the response to the client.\n***You cannot alter the `response`*** with any of your post-fastboot middleware.\n\n## Custom FastBoot Instance\n\nFor more control over the FastBoot instance that is created to render\nthe Ember app, you can pass a custom instance that the middleware will\nuse instead of creating its own:\n\n```js\nlet fastboot = new FastBoot({\n  distPath: 'path/to/dist'\n});\n\nlet middleware = fastbootMiddleware({\n  fastboot: fastboot\n});\n\napp.get('/*', middleware);\n\n// ...later\nfastboot.reload();\n```\n\n[ember-cli-fastboot]: https://github.com/ember-fastboot/ember-cli-fastboot\n\n## Tests\n\n`npm test`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ember-fastboot/fastboot-express-middleware.git"
  },
  "scripts": {
    "build": "ember build",
    "postinstall": "broccoli-module-alchemist-install",
    "prepublish": "npm run build",
    "test": "mocha"
  },
  "version": "1.0.0-rc.4"
}
